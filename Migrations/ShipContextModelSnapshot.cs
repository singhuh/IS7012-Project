// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ship.Models;

namespace Ship.Migrations
{
    [DbContext(typeof(ShipContext))]
    partial class ShipContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ship.Models.DeliverySpeed", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShipSpeed")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("DeliverySpeed");
                });

            modelBuilder.Entity("Ship.Models.Recipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateReceived");

                    b.Property<string>("RName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("RPhone");

                    b.Property<string>("Rddress")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Recipient");
                });

            modelBuilder.Entity("Ship.Models.Sender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SAddress")
                        .IsRequired();

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Sender");
                });

            modelBuilder.Entity("Ship.Models.Shipment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateDelivered")
                        .IsRequired();

                    b.Property<DateTime?>("DateShipped")
                        .IsRequired();

                    b.Property<int>("DeliverySpeedID");

                    b.Property<int>("RecipientID");

                    b.Property<int>("SenderID");

                    b.Property<string>("WB")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<double>("Weight");

                    b.HasKey("ID");

                    b.HasIndex("DeliverySpeedID");

                    b.HasIndex("RecipientID");

                    b.HasIndex("SenderID");

                    b.ToTable("Shipment");
                });

            modelBuilder.Entity("Ship.Models.Shipment", b =>
                {
                    b.HasOne("Ship.Models.DeliverySpeed", "DeliverySpeed")
                        .WithMany("Shipments")
                        .HasForeignKey("DeliverySpeedID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ship.Models.Recipient", "Recipient")
                        .WithMany("Shipments")
                        .HasForeignKey("RecipientID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ship.Models.Sender", "Sender")
                        .WithMany("Shipments")
                        .HasForeignKey("SenderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
